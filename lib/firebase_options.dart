// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: dotenv.get('WEB_API_KEY'),
    appId: '1:1045954068872:web:99844d492f22f8b7f8ba3d',
    messagingSenderId: '1045954068872',
    projectId: 'cleaning-app-15754',
    authDomain: 'cleaning-app-15754.firebaseapp.com',
    storageBucket: 'cleaning-app-15754.appspot.com',
    measurementId: 'G-X71BDXJ396',
  );

  static FirebaseOptions android = FirebaseOptions(
    apiKey: dotenv.get('ANDROID_API_KEY'),
    appId: '1:1045954068872:android:f6290192c13dc21df8ba3d',
    messagingSenderId: '1045954068872',
    projectId: 'cleaning-app-15754',
    storageBucket: 'cleaning-app-15754.appspot.com',
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: dotenv.get('IOS_API_KEY'),
    appId: '1:1045954068872:ios:aae667a3ee1e1414f8ba3d',
    messagingSenderId: '1045954068872',
    projectId: 'cleaning-app-15754',
    storageBucket: 'cleaning-app-15754.appspot.com',
    iosClientId:
        '1045954068872-6h8rmg6hv231ed5uripvub54qko7qslb.apps.googleusercontent.com',
    iosBundleId: 'com.example.myapp',
  );

  static FirebaseOptions macos = FirebaseOptions(
    apiKey: dotenv.get('MACOS_API_KEY'),
    appId: '1:1045954068872:ios:aae667a3ee1e1414f8ba3d',
    messagingSenderId: '1045954068872',
    projectId: 'cleaning-app-15754',
    storageBucket: 'cleaning-app-15754.appspot.com',
    iosClientId:
        '1045954068872-6h8rmg6hv231ed5uripvub54qko7qslb.apps.googleusercontent.com',
    iosBundleId: 'com.example.myapp',
  );
}
